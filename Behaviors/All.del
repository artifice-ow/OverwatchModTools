/*
* Overwatch Mod Tools
* This file contains all the general behavior rules.
*/
import "Behaviors.del";

// All Hero Behaviors
rule: "BEHAVIOR: Stationary"
Event.OngoingPlayer
if (EventPlayer().behavior == 0 
    && IsDummyBot(EventPlayer()) 
    && IsGameInProgress())
{
    resetBehaviors(EventPlayer());
}

rule: "BEHAVIOR: Strafe"
Event.OngoingPlayer
if (EventPlayer().behavior == 1 
    && IsDummyBot(EventPlayer()) 
    && IsGameInProgress())
{
    define strafeLength = 0.3;
    define strafePosition = 0;
    StartThrottleInDirection(
        EventPlayer(), 
        Vector(1,0,0), 
        1, 
        Relative.ToPlayer, 
        ThrottleBehavior.ReplaceExistingThrottle, 
        ThrottleRev.DirectionAndMagnitude
    );
    while(EventPlayer().behavior == 1)
    {
        if (strafePosition >= strafeLength)
        {
            StartThrottleInDirection(
                EventPlayer(), 
                Vector(-1,0,0), 
                1, 
                Relative.ToPlayer, 
                ThrottleBehavior.ReplaceExistingThrottle, 
                ThrottleRev.DirectionAndMagnitude
            );
        }
        else if (strafePosition <= -strafeLength)
        {
            StartThrottleInDirection(
                EventPlayer(), 
                Vector(1,0,0), 
                1, 
                Relative.ToPlayer, 
                ThrottleBehavior.ReplaceExistingThrottle, 
                ThrottleRev.DirectionAndMagnitude
            );
        }
        if(ThrottleOf(EventPlayer()) == Vector(1,0,0))
        {
            strafePosition += 0.016;
        }
        else if (ThrottleOf(EventPlayer()) == Vector(-1,0,0))
        {
            strafePosition -= 0.016;
        }
    }
}

rule: "BEHAVIOR: Long Strafe"
Event.OngoingPlayer
if (EventPlayer().behavior == 2 
    && IsDummyBot(EventPlayer()) 
    && IsGameInProgress())
{
    define strafeLength = 1;
    define strafePosition = 0;
    StartThrottleInDirection(
        EventPlayer(), 
        Vector(1,0,0), 
        1, 
        Relative.ToPlayer, 
        ThrottleBehavior.ReplaceExistingThrottle, 
        ThrottleRev.DirectionAndMagnitude
    );
    while(EventPlayer().behavior == 2)
    {
        if (strafePosition >= strafeLength)
        {
            StartThrottleInDirection(
                EventPlayer(), 
                Vector(-1,0,0), 
                1, 
                Relative.ToPlayer, 
                ThrottleBehavior.ReplaceExistingThrottle,
                ThrottleRev.DirectionAndMagnitude
            );
        }
        else if (strafePosition <= -strafeLength)
        {
            StartThrottleInDirection(
                EventPlayer(), 
                Vector(1,0,0), 
                1, 
                Relative.ToPlayer, 
                ThrottleBehavior.ReplaceExistingThrottle, 
                ThrottleRev.DirectionAndMagnitude
            );
        }
        if(ThrottleOf(EventPlayer()) == Vector(1,0,0))
        {
            strafePosition += 0.016;
        }
        else if (ThrottleOf(EventPlayer()) == Vector(-1,0,0))
        {
            strafePosition -= 0.016;
        }
    }
}

rule: "BEHAVIOR: AD Spam"
Event.OngoingPlayer
if (EventPlayer().behavior == 3 
    && IsDummyBot(EventPlayer())
    && IsGameInProgress())
{
    define strafeLength = 0.05;
    define strafePosition = 0;
    StartThrottleInDirection(
        EventPlayer(),
        Vector(1,0,0),
        1,
        Relative.ToPlayer,
        ThrottleBehavior.ReplaceExistingThrottle,
        ThrottleRev.DirectionAndMagnitude
    );
    while(EventPlayer().behavior == 3)
    {
        if (strafePosition >= strafeLength)
        {
            StartThrottleInDirection(
                EventPlayer(), 
                Vector(-1,0,0), 
                1, 
                Relative.ToPlayer, 
                ThrottleBehavior.ReplaceExistingThrottle, 
                ThrottleRev.DirectionAndMagnitude
            );
        }
        else if (strafePosition <= -strafeLength)
        {
            StartThrottleInDirection(
                EventPlayer(), 
                Vector(1,0,0), 
                1, 
                Relative.ToPlayer, 
                ThrottleBehavior.ReplaceExistingThrottle, 
                ThrottleRev.DirectionAndMagnitude
            );
        }
        if(ThrottleOf(EventPlayer()) == Vector(1,0,0))
        {
            strafePosition += 0.016;
        }
        else if (ThrottleOf(EventPlayer()) == Vector(-1,0,0))
        {
            strafePosition -= 0.016;
        }
    }
}

rule: "BEHAVIOR: Crouch Strafe"
Event.OngoingPlayer
if (EventPlayer().behavior == 4 
    && IsDummyBot(EventPlayer()) 
    && IsGameInProgress())
{
    define strafeLength = 0.2;
    define strafePosition = 0;
    StartThrottleInDirection(
        EventPlayer(), 
        Vector(1,0,0), 
        1, 
        Relative.ToPlayer, 
        ThrottleBehavior.ReplaceExistingThrottle, 
        ThrottleRev.DirectionAndMagnitude
    );
    while(EventPlayer().behavior == 4)
    {
        if (strafePosition >= strafeLength)
        {
            StopHoldingButton(EventPlayer(), Button.Crouch);
            StartThrottleInDirection(
                EventPlayer(), 
                Vector(-1,0,0), 
                1, 
                Relative.ToPlayer, 
                ThrottleBehavior.ReplaceExistingThrottle, 
                ThrottleRev.DirectionAndMagnitude
            );
        }
        else if (strafePosition <= -strafeLength)
        {
            StopHoldingButton(EventPlayer(), Button.Crouch);
            StartThrottleInDirection(
                EventPlayer(), 
                Vector(1,0,0), 
                1, 
                Relative.ToPlayer, 
                ThrottleBehavior.ReplaceExistingThrottle, 
                ThrottleRev.DirectionAndMagnitude
            );
        }
        if (strafePosition > 0 - 0.03 && strafePosition < 0 + 0.03)
        {
            StartHoldingButton(EventPlayer(), Button.Crouch);
        }
        if(ThrottleOf(EventPlayer()) == Vector(1,0,0))
        {
            strafePosition += 0.016;
        }
        else if (ThrottleOf(EventPlayer()) == Vector(-1,0,0))
        {
            strafePosition -= 0.016;
        }
    }
}

rule: "BEHAVIOR: Track Closest Enemy"
Event.OngoingPlayer
if (EventPlayer().behavior == 6
    && IsDummyBot(EventPlayer())
    && IsGameInProgress())
{
    while (EventPlayer().behavior == 6)
    {
        StartFacing(
            EventPlayer(), 
            DirectionTowards(
                EventPlayer(), 
                ClosestPlayerTo(EventPlayer(), OppositeTeamOf(TeamOf(EventPlayer())))
            ), 
            20000, 
            Relative.ToWorld, 
            FacingRev.DirectionAndTurnRate
        );
    }
}

rule: "BEHAVIOR: Shoot Closest Enemy"
Event.OngoingPlayer
if (EventPlayer().behavior == 7
    && IsDummyBot(EventPlayer())
    && IsGameInProgress())
{
    StartHoldingButton(EventPlayer(), Button.PrimaryFire);   
    while (EventPlayer().behavior == 7)
    {
        StartFacing(
            EventPlayer(), 
            DirectionTowards(
                EventPlayer(), 
                ClosestPlayerTo(EventPlayer(), OppositeTeamOf(TeamOf(EventPlayer())))
            ), 
            20000, 
            Relative.ToWorld, 
            FacingRev.DirectionAndTurnRate
        );
    }
}